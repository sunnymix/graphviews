/*
 * This file is generated by jOOQ.
 */
package com.sunnymix.graphviews.orm.jooq.tables.records;


import com.sunnymix.graphviews.orm.jooq.tables.Graph;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class GraphRecord extends UpdatableRecordImpl<GraphRecord> implements Record4<String, String, String, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>graphviews.graph.id</code>. ID
     */
    public GraphRecord setId(String value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>graphviews.graph.id</code>. ID
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>graphviews.graph.title</code>. 标题
     */
    public GraphRecord setTitle(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>graphviews.graph.title</code>. 标题
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>graphviews.graph.text</code>. 文本
     */
    public GraphRecord setText(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>graphviews.graph.text</code>. 文本
     */
    public String getText() {
        return (String) get(2);
    }

    /**
     * Setter for <code>graphviews.graph.created</code>. 创建时间
     */
    public GraphRecord setCreated(OffsetDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>graphviews.graph.created</code>. 创建时间
     */
    public OffsetDateTime getCreated() {
        return (OffsetDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, OffsetDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, String, OffsetDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return Graph.GRAPH.ID;
    }

    @Override
    public Field<String> field2() {
        return Graph.GRAPH.TITLE;
    }

    @Override
    public Field<String> field3() {
        return Graph.GRAPH.TEXT;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return Graph.GRAPH.CREATED;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getText();
    }

    @Override
    public OffsetDateTime component4() {
        return getCreated();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getText();
    }

    @Override
    public OffsetDateTime value4() {
        return getCreated();
    }

    @Override
    public GraphRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public GraphRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public GraphRecord value3(String value) {
        setText(value);
        return this;
    }

    @Override
    public GraphRecord value4(OffsetDateTime value) {
        setCreated(value);
        return this;
    }

    @Override
    public GraphRecord values(String value1, String value2, String value3, OffsetDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached GraphRecord
     */
    public GraphRecord() {
        super(Graph.GRAPH);
    }

    /**
     * Create a detached, initialised GraphRecord
     */
    public GraphRecord(String id, String title, String text, OffsetDateTime created) {
        super(Graph.GRAPH);

        setId(id);
        setTitle(title);
        setText(text);
        setCreated(created);
    }

    /**
     * Create a detached, initialised GraphRecord
     */
    public GraphRecord(com.sunnymix.graphviews.orm.jooq.tables.pojos.Graph value) {
        super(Graph.GRAPH);

        if (value != null) {
            setId(value.getId());
            setTitle(value.getTitle());
            setText(value.getText());
            setCreated(value.getCreated());
        }
    }
}
